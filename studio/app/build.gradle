apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    def buildNumber = System.getenv("BUILD_NUMBER") ?: 1
    compileSdkVersion rootProject.targetSdk
    buildToolsVersion rootProject.buildTools

    defaultConfig {
        applicationId "nl.sogeti.android.gpstracker"
        minSdkVersion rootProject.minSdk
        targetSdkVersion rootProject.targetSdk
        versionCode rootProject.appVersionCode
        versionName rootProject.appVersionName
        buildConfigField "int", "BUILD_NUMBER", buildNumber as String
        buildConfigField "String", "GIT_COMMIT", "\"" + (System.getenv("GIT_COMMIT") ?: "unknown") + "\"" as String
        archivesBaseName = "opengpstracker-ng-$versionName"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    apply from: '../flavors.gradle'
    productFlavors {
        develop {
            applicationIdSuffix = ".develop"
        }
        mock {
            applicationIdSuffix = ".mock"
        }
    }

    apply from: '../signing.gradle'

    buildTypes {
        debug {
            testCoverageEnabled false
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    dataBinding {
        enabled = true
    }

    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }

    testOptions {
        unitTests.returnDefaultValues = true
        animationsDisabled = true
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

configurations.all {
    resolutionStrategy {
        force "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
        force "com.android.support:support-v4:$rootProject.supportLibraryVersion"
        force "com.android.support:design:$rootProject.supportLibraryVersion"
        force "android.arch.lifecycle:runtime:$rootProject.archComponentsVerion"
        force "android.arch.lifecycle:livedata-core:$rootProject.archComponentsVerion"
        force "android.arch.lifecycle:viewmodel:$rootProject.archComponentsVerion"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api project(':features')
    implementation project(':service')
    implementation project(':base')
    implementation project(':utils')
    implementation project(':wear-shared')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$rootProject.kotlinVersion"
    implementation 'androidx.annotation:annotation:1.0.0-rc02'
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation "com.google.firebase:firebase-core:$rootProject.firebaseCoreVersion"
    implementation("com.crashlytics.sdk.android:crashlytics:$rootProject.crashlicticsVerion@aar") {
        transitive = true
    }
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    kapt "androidx.databinding:databinding-compiler:$rootProject.gradlePluginVersion"
    kapt 'androidx.test:runner:1.1.0-alpha4'

    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testImplementation "org.robolectric:robolectric:$rootProject.robolectricVersion"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakcanaryVersion"

    androidTestMockImplementation 'androidx.test.uiautomator:uiautomator:2.2.0-alpha4'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test:rules:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.0-alpha4'
    androidTestImplementation "com.jakewharton.timber:timber:$rootProject.timberVersion"
    androidTestImplementation "com.google.android.gms:play-services-maps:$rootProject.playServicesVersion"
}

apply plugin: 'com.google.gms.google-services'
